---
- name: install named
  ansible.builtin.yum:
    name: 
      - bind-chroot
      - bind-utils
      - python3-dns
    state: present

- name: define serial number
  ansible.builtin.set_fact: 
  # this creates new/higher serial every 15 minutes
     serial:  "{{ ansible_date_time.year }}{{ ansible_date_time.month }}{{ ansible_date_time.day }}{{  (((ansible_date_time.hour|int) * 60 +Â (ansible_date_time.minute|int)) // 14.40)|int }}"

- name: configure named.conf
  ansible.builtin.template:
    src: named.conf.j2  
    dest: /etc/named.conf
    group: named
    setype: named_conf_t
    mode: 0640

- name: assure logfiles be present
  ansible.builtin.file:
    path: "{{ item }}" 
    state: touch
    mode: 0660
    owner: named
    group: named
    setype: named_log_t
  loop:
    - "/var/log/named.ddnsupdate.log"
    - "/var/log/named.auth.info"

# way to slow....
#- name: find leftover files from previous named runs
#  find:
#    paths: /var/named
#    patterns: "tmp-*"
#  register: find_results
#
#- name: remove leftover files found 
#  file:
#    path: "{{ item['path'] }}"
#    state: absent
#  with_items: "{{ find_results['files'] }}"

- name: remove leftover tmp files found 
  ansible.builtin.shell:
    cmd: "rm /var/named/tmp-*"
  ignore_errors: true


- name: remove leftover journal files found 
  ansible.builtin.shell:
    cmd: "rm /var/named/*.jnl"
  ignore_errors: true

- name: provide initial zone files
  ansible.builtin.template:
    src: zone.j2
    dest: /var/named/{{ item }}.zone
  loop: "{{ bastion_named_zones }}"

- name: provide initial zone files
  ansible.builtin.template:
    src: reverse_zone.j2  
    dest: /var/named/{{ item }}.zone
  loop: "{{ bastion_named_revzones }}"

- name: start named
  ansible.builtin.systemd:
    name: named
    state: restarted
    enabled: true
      
- name: check forward zones loaded properly
  ansible.builtin.shell:
    cmd: "rndc zonestatus  {{ item }}"
  loop: "{{ bastion_named_zones }}"
      
- name: check reverse zones loaded properly
  ansible.builtin.shell:
    cmd: "rndc zonestatus  {{ item }}"
  loop: "{{ bastion_named_revzones }}"
